

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Nov 07 18:31:42 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	text10,global,reloc=2,class=CODE,delta=1
    18                           	psect	text11,global,reloc=2,class=CODE,delta=1
    19                           	psect	text12,global,reloc=2,class=CODE,delta=1
    20                           	psect	text13,global,reloc=2,class=CODE,delta=1
    21                           	psect	text14,global,reloc=2,class=CODE,delta=1
    22                           	psect	text15,global,reloc=2,class=CODE,delta=1
    23                           	psect	text16,global,reloc=2,class=CODE,delta=1
    24                           	psect	text17,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     _PORTDbits	set	3971
    28  0000                     _TRISDbits	set	3989
    29                           
    30                           ; 0 bytes @ 0x15
    31 ;;
    32 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    33 ;;
    34 ;; *************** function _main *****************
    35 ;; Defined at:
    36 ;;		line 27 in file "../src/PIC18/Main.c"
    37 ;; Parameters:    Size  Location     Type
    38 ;;		None
    39 ;; Auto vars:     Size  Location     Type
    40 ;;		None
    41 ;; Return value:  Size  Location     Type
    42 ;;		None               void
    43 ;; Registers used:
    44 ;;		wreg, status,2, status,0, cstack
    45 ;; Tracked objects:
    46 ;;		On entry : 0/0
    47 ;;		On exit  : 0/0
    48 ;;		Unchanged: 0/0
    49 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    50 ;;      Params:         0       0       0       0       0       0       0
    51 ;;      Locals:         0       0       0       0       0       0       0
    52 ;;      Temps:          0       0       0       0       0       0       0
    53 ;;      Totals:         0       0       0       0       0       0       0
    54 ;;Total ram usage:        0 bytes
    55 ;; Hardware stack levels required when called:    5
    56 ;; This function calls:
    57 ;;		_enter_HVP
    58 ;;		_exit_HVP
    59 ;;		_readDeviceID1
    60 ;;		_trisInit
    61 ;; This function is called by:
    62 ;;		Startup code after reset
    63 ;; This function uses a non-reentrant model
    64 ;;
    65                           
    66                           	psect	text0
    67  007B04                     __ptext0:
    68                           	opt stack 0
    69  007B04                     _main:
    70                           	opt stack 25
    71                           
    72                           ;Main.c: 29: trisInit();
    73                           
    74                           ;incstack = 0
    75  007B04  EC60  F03D         	call	_trisInit	;wreg free
    76                           
    77                           ;Main.c: 31: enter_HVP();
    78  007B08  EC79  F03D         	call	_enter_HVP	;wreg free
    79                           
    80                           ;Main.c: 37: readDeviceID1();
    81  007B0C  EC3B  F03E         	call	_readDeviceID1	;wreg free
    82                           
    83                           ;Main.c: 38: exit_HVP();
    84  007B10  EC72  F03D         	call	_exit_HVP	;wreg free
    85  007B14                     l97:
    86  007B14  D7FF               	goto	l97
    87  007B16                     __end_of_main:
    88                           	opt stack 0
    89                           
    90                           	psect	cinit
    91  007ABA                     __pcinit:
    92                           	opt stack 0
    93  007ABA                     start_initialization:
    94                           	opt stack 0
    95  007ABA                     __initialization:
    96                           	opt stack 0
    97  007ABA                     end_of_initialization:
    98                           	opt stack 0
    99  007ABA                     __end_of__initialization:
   100                           	opt stack 0
   101  007ABA  0100               	movlb	0
   102  007ABC  EF82  F03D         	goto	_main	;jump to C main() function
   103                           
   104                           	psect	cstackCOMRAM
   105  000001                     __pcstackCOMRAM:
   106                           	opt stack 0
   107  000001                     ?_readPGD:
   108                           	opt stack 0
   109  000001                     writePGD@data:
   110                           	opt stack 0
   111                           
   112                           ; 2 bytes @ 0x0
   113  000001                     	ds	2
   114  000003                     ??_readPGD:
   115  000003                     writeBit@bitToWrite:
   116                           	opt stack 0
   117                           
   118                           ; 2 bytes @ 0x2
   119  000003                     	ds	1
   120  000004                     ?_readBit:
   121                           	opt stack 0
   122                           
   123                           ; 2 bytes @ 0x3
   124  000004                     	ds	1
   125  000005                     writeBits@pattern:
   126                           	opt stack 0
   127                           
   128                           ; 2 bytes @ 0x4
   129  000005                     	ds	1
   130  000006                     readBit@data:
   131                           	opt stack 0
   132                           
   133                           ; 2 bytes @ 0x5
   134  000006                     	ds	1
   135  000007                     writeBits@bitsToWrite:
   136                           	opt stack 0
   137                           
   138                           ; 2 bytes @ 0x6
   139  000007                     	ds	1
   140  000008                     ?_readBits:
   141                           	opt stack 0
   142  000008                     readBits@bitsToRead:
   143                           	opt stack 0
   144                           
   145                           ; 2 bytes @ 0x7
   146  000008                     	ds	1
   147  000009                     ??_writeBits:
   148                           
   149                           ; 0 bytes @ 0x8
   150  000009                     	ds	1
   151  00000A                     ??_readBits:
   152                           
   153                           ; 0 bytes @ 0x9
   154  00000A                     	ds	2
   155  00000C                     writeBits@i:
   156                           	opt stack 0
   157  00000C                     readBits@i:
   158                           	opt stack 0
   159                           
   160                           ; 2 bytes @ 0xB
   161  00000C                     	ds	2
   162  00000E                     writeICSP@commandByte:
   163                           	opt stack 0
   164  00000E                     readBits@data:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0xD
   168  00000E                     	ds	2
   169  000010                     ?_readICSP:
   170                           	opt stack 0
   171  000010                     writeICSP@dataBytes:
   172                           	opt stack 0
   173                           
   174                           ; 2 bytes @ 0xF
   175  000010                     	ds	2
   176  000012                     readICSP@data:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0x11
   180  000012                     	ds	2
   181  000014                     readDeviceID1@value:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x13
   185  000014                     	ds	2
   186  000016                     
   187 ;; *************** function _trisInit *****************
   188 ;; Defined at:
   189 ;;		line 20 in file "../src/PIC18/Main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;		None
   194 ;; Return value:  Size  Location     Type
   195 ;;		None               void
   196 ;; Registers used:
   197 ;;		None
   198 ;; Tracked objects:
   199 ;;		On entry : 0/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   203 ;;      Params:         0       0       0       0       0       0       0
   204 ;;      Locals:         0       0       0       0       0       0       0
   205 ;;      Temps:          0       0       0       0       0       0       0
   206 ;;      Totals:         0       0       0       0       0       0       0
   207 ;;Total ram usage:        0 bytes
   208 ;; Hardware stack levels used:    1
   209 ;; This function calls:
   210 ;;		Nothing
   211 ;; This function is called by:
   212 ;;		_main
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text1
   217  007AC0                     __ptext1:
   218                           	opt stack 0
   219  007AC0                     _trisInit:
   220                           	opt stack 29
   221                           
   222                           ;Main.c: 21: TRISDbits.TRISD4 = 0;
   223                           
   224                           ;incstack = 0
   225  007AC0  9895               	bcf	3989,4,c	;volatile
   226                           
   227                           ;Main.c: 22: TRISDbits.TRISD5 = 0;
   228  007AC2  9A95               	bcf	3989,5,c	;volatile
   229                           
   230                           ;Main.c: 23: TRISDbits.TRISD6 = 0;
   231  007AC4  9C95               	bcf	3989,6,c	;volatile
   232                           
   233                           ;Main.c: 24: TRISDbits.TRISD7 = 0;
   234  007AC6  9E95               	bcf	3989,7,c	;volatile
   235  007AC8  0012               	return	
   236  007ACA                     __end_of_trisInit:
   237                           	opt stack 0
   238                           
   239 ;; *************** function _readDeviceID1 *****************
   240 ;; Defined at:
   241 ;;		line 79 in file "../src/PIC18/FlashProg.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;  value           2   19[COMRAM] unsigned int 
   246 ;; Return value:  Size  Location     Type
   247 ;;		None               void
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   255 ;;      Params:         0       0       0       0       0       0       0
   256 ;;      Locals:         2       0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0
   258 ;;      Totals:         2       0       0       0       0       0       0
   259 ;;Total ram usage:        2 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; Hardware stack levels required when called:    4
   262 ;; This function calls:
   263 ;;		_readICSP
   264 ;;		_writeICSP
   265 ;; This function is called by:
   266 ;;		_main
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text2
   271  007C76                     __ptext2:
   272                           	opt stack 0
   273  007C76                     _readDeviceID1:
   274                           	opt stack 25
   275                           
   276                           ;FlashProg.c: 80: uint16 value = 0;
   277                           
   278                           ;incstack = 0
   279  007C76  0E00               	movlw	0
   280  007C78  6E15               	movwf	readDeviceID1@value+1,c
   281  007C7A  0E00               	movlw	0
   282  007C7C  6E14               	movwf	readDeviceID1@value,c
   283                           
   284                           ;FlashProg.c: 81: writeICSP(0x0, 0x0e3f);
   285  007C7E  0E00               	movlw	0
   286  007C80  6E0F               	movwf	writeICSP@commandByte+1,c
   287  007C82  0E00               	movlw	0
   288  007C84  6E0E               	movwf	writeICSP@commandByte,c
   289  007C86  0E0E               	movlw	14
   290  007C88  6E11               	movwf	writeICSP@dataBytes+1,c
   291  007C8A  0E3F               	movlw	63
   292  007C8C  6E10               	movwf	writeICSP@dataBytes,c
   293  007C8E  ECB3  F03D         	call	_writeICSP	;wreg free
   294                           
   295                           ;FlashProg.c: 82: writeICSP(0x0, 0x6ef8);
   296  007C92  0E00               	movlw	0
   297  007C94  6E0F               	movwf	writeICSP@commandByte+1,c
   298  007C96  0E00               	movlw	0
   299  007C98  6E0E               	movwf	writeICSP@commandByte,c
   300  007C9A  0E6E               	movlw	110
   301  007C9C  6E11               	movwf	writeICSP@dataBytes+1,c
   302  007C9E  0EF8               	movlw	248
   303  007CA0  6E10               	movwf	writeICSP@dataBytes,c
   304  007CA2  ECB3  F03D         	call	_writeICSP	;wreg free
   305                           
   306                           ;FlashProg.c: 83: writeICSP(0x0, 0x0eff);
   307  007CA6  0E00               	movlw	0
   308  007CA8  6E0F               	movwf	writeICSP@commandByte+1,c
   309  007CAA  0E00               	movlw	0
   310  007CAC  6E0E               	movwf	writeICSP@commandByte,c
   311  007CAE  0E0E               	movlw	14
   312  007CB0  6E11               	movwf	writeICSP@dataBytes+1,c
   313  007CB2  6810               	setf	writeICSP@dataBytes,c
   314  007CB4  ECB3  F03D         	call	_writeICSP	;wreg free
   315                           
   316                           ;FlashProg.c: 84: writeICSP(0x0, 0x6ef7);
   317  007CB8  0E00               	movlw	0
   318  007CBA  6E0F               	movwf	writeICSP@commandByte+1,c
   319  007CBC  0E00               	movlw	0
   320  007CBE  6E0E               	movwf	writeICSP@commandByte,c
   321  007CC0  0E6E               	movlw	110
   322  007CC2  6E11               	movwf	writeICSP@dataBytes+1,c
   323  007CC4  0EF7               	movlw	247
   324  007CC6  6E10               	movwf	writeICSP@dataBytes,c
   325  007CC8  ECB3  F03D         	call	_writeICSP	;wreg free
   326                           
   327                           ;FlashProg.c: 85: writeICSP(0x0, 0x0eff);
   328  007CCC  0E00               	movlw	0
   329  007CCE  6E0F               	movwf	writeICSP@commandByte+1,c
   330  007CD0  0E00               	movlw	0
   331  007CD2  6E0E               	movwf	writeICSP@commandByte,c
   332  007CD4  0E0E               	movlw	14
   333  007CD6  6E11               	movwf	writeICSP@dataBytes+1,c
   334  007CD8  6810               	setf	writeICSP@dataBytes,c
   335  007CDA  ECB3  F03D         	call	_writeICSP	;wreg free
   336                           
   337                           ;FlashProg.c: 86: writeICSP(0x0, 0x6ef6);
   338  007CDE  0E00               	movlw	0
   339  007CE0  6E0F               	movwf	writeICSP@commandByte+1,c
   340  007CE2  0E00               	movlw	0
   341  007CE4  6E0E               	movwf	writeICSP@commandByte,c
   342  007CE6  0E6E               	movlw	110
   343  007CE8  6E11               	movwf	writeICSP@dataBytes+1,c
   344  007CEA  0EF6               	movlw	246
   345  007CEC  6E10               	movwf	writeICSP@dataBytes,c
   346  007CEE  ECB3  F03D         	call	_writeICSP	;wreg free
   347                           
   348                           ;FlashProg.c: 87: value = readICSP();
   349  007CF2  ECEA  F03D         	call	_readICSP	;wreg free
   350  007CF6  C010  F014         	movff	?_readICSP,readDeviceID1@value
   351  007CFA  C011  F015         	movff	?_readICSP+1,readDeviceID1@value+1
   352  007CFE  0012               	return	
   353  007D00                     __end_of_readDeviceID1:
   354                           	opt stack 0
   355                           
   356 ;; *************** function _writeICSP *****************
   357 ;; Defined at:
   358 ;;		line 5 in file "../src/PIC18/ICSP.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;  commandByte     2   13[COMRAM] unsigned int 
   361 ;;  dataBytes       2   15[COMRAM] unsigned int 
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;		None               void
   366 ;; Registers used:
   367 ;;		wreg, status,2, status,0, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   373 ;;      Params:         4       0       0       0       0       0       0
   374 ;;      Locals:         0       0       0       0       0       0       0
   375 ;;      Temps:          0       0       0       0       0       0       0
   376 ;;      Totals:         4       0       0       0       0       0       0
   377 ;;Total ram usage:        4 bytes
   378 ;; Hardware stack levels used:    1
   379 ;; Hardware stack levels required when called:    3
   380 ;; This function calls:
   381 ;;		_writeBits
   382 ;; This function is called by:
   383 ;;		_readDeviceID1
   384 ;;		_bulkErase
   385 ;;		_readDeviceID2
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text3
   390  007B66                     __ptext3:
   391                           	opt stack 0
   392  007B66                     _writeICSP:
   393                           	opt stack 25
   394                           
   395                           ;ICSP.c: 7: writeBits(commandByte, 4);
   396                           
   397                           ;incstack = 0
   398  007B66  C00E  F005         	movff	writeICSP@commandByte,writeBits@pattern
   399  007B6A  C00F  F006         	movff	writeICSP@commandByte+1,writeBits@pattern+1
   400  007B6E  0E00               	movlw	0
   401  007B70  6E08               	movwf	writeBits@bitsToWrite+1,c
   402  007B72  0E04               	movlw	4
   403  007B74  6E07               	movwf	writeBits@bitsToWrite,c
   404  007B76  ECC8  F03D         	call	_writeBits	;wreg free
   405                           
   406                           ;ICSP.c: 8: writeBits(dataBytes, 16);
   407  007B7A  C010  F005         	movff	writeICSP@dataBytes,writeBits@pattern
   408  007B7E  C011  F006         	movff	writeICSP@dataBytes+1,writeBits@pattern+1
   409  007B82  0E00               	movlw	0
   410  007B84  6E08               	movwf	writeBits@bitsToWrite+1,c
   411  007B86  0E10               	movlw	16
   412  007B88  6E07               	movwf	writeBits@bitsToWrite,c
   413  007B8A  ECC8  F03D         	call	_writeBits	;wreg free
   414  007B8E  0012               	return	
   415  007B90                     __end_of_writeICSP:
   416                           	opt stack 0
   417                           
   418 ;; *************** function _readICSP *****************
   419 ;; Defined at:
   420 ;;		line 26 in file "../src/PIC18/ICSP.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  data            2   17[COMRAM] unsigned int 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  2   15[COMRAM] unsigned int 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   434 ;;      Params:         2       0       0       0       0       0       0
   435 ;;      Locals:         2       0       0       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0       0       0
   437 ;;      Totals:         4       0       0       0       0       0       0
   438 ;;Total ram usage:        4 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; Hardware stack levels required when called:    3
   441 ;; This function calls:
   442 ;;		_readBits
   443 ;;		_writeBits
   444 ;; This function is called by:
   445 ;;		_readDeviceID1
   446 ;;		_readDeviceID2
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text4
   451  007BD4                     __ptext4:
   452                           	opt stack 0
   453  007BD4                     _readICSP:
   454                           	opt stack 25
   455                           
   456                           ;ICSP.c: 27: uint16 data = 0;
   457                           
   458                           ;incstack = 0
   459  007BD4  0E00               	movlw	0
   460  007BD6  6E13               	movwf	readICSP@data+1,c
   461  007BD8  0E00               	movlw	0
   462  007BDA  6E12               	movwf	readICSP@data,c
   463                           
   464                           ;ICSP.c: 28: writeBits(9, 4);
   465  007BDC  0E00               	movlw	0
   466  007BDE  6E06               	movwf	writeBits@pattern+1,c
   467  007BE0  0E09               	movlw	9
   468  007BE2  6E05               	movwf	writeBits@pattern,c
   469  007BE4  0E00               	movlw	0
   470  007BE6  6E08               	movwf	writeBits@bitsToWrite+1,c
   471  007BE8  0E04               	movlw	4
   472  007BEA  6E07               	movwf	writeBits@bitsToWrite,c
   473  007BEC  ECC8  F03D         	call	_writeBits	;wreg free
   474                           
   475                           ;ICSP.c: 29: writeBits(0, 8);
   476  007BF0  0E00               	movlw	0
   477  007BF2  6E06               	movwf	writeBits@pattern+1,c
   478  007BF4  0E00               	movlw	0
   479  007BF6  6E05               	movwf	writeBits@pattern,c
   480  007BF8  0E00               	movlw	0
   481  007BFA  6E08               	movwf	writeBits@bitsToWrite+1,c
   482  007BFC  0E08               	movlw	8
   483  007BFE  6E07               	movwf	writeBits@bitsToWrite,c
   484  007C00  ECC8  F03D         	call	_writeBits	;wreg free
   485                           
   486                           ;ICSP.c: 30: data = readBits(8);
   487  007C04  0E00               	movlw	0
   488  007C06  6E09               	movwf	readBits@bitsToRead+1,c
   489  007C08  0E08               	movlw	8
   490  007C0A  6E08               	movwf	readBits@bitsToRead,c
   491  007C0C  EC11  F03E         	call	_readBits	;wreg free
   492  007C10  C008  F012         	movff	?_readBits,readICSP@data
   493  007C14  C009  F013         	movff	?_readBits+1,readICSP@data+1
   494                           
   495                           ;ICSP.c: 31: return data;
   496  007C18  C012  F010         	movff	readICSP@data,?_readICSP
   497  007C1C  C013  F011         	movff	readICSP@data+1,?_readICSP+1
   498  007C20  0012               	return	
   499  007C22                     __end_of_readICSP:
   500                           	opt stack 0
   501                           
   502 ;; *************** function _writeBits *****************
   503 ;; Defined at:
   504 ;;		line 17 in file "../src/PIC18/ICSP.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  pattern         2    4[COMRAM] unsigned int 
   507 ;;  bitsToWrite     2    6[COMRAM] unsigned int 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  i               2   11[COMRAM] int 
   510 ;; Return value:  Size  Location     Type
   511 ;;		None               void
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   519 ;;      Params:         4       0       0       0       0       0       0
   520 ;;      Locals:         2       0       0       0       0       0       0
   521 ;;      Temps:          3       0       0       0       0       0       0
   522 ;;      Totals:         9       0       0       0       0       0       0
   523 ;;Total ram usage:        9 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; Hardware stack levels required when called:    2
   526 ;; This function calls:
   527 ;;		_writeBit
   528 ;; This function is called by:
   529 ;;		_writeICSP
   530 ;;		_readICSP
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text5
   535  007B90                     __ptext5:
   536                           	opt stack 0
   537  007B90                     _writeBits:
   538                           	opt stack 25
   539                           
   540                           ;ICSP.c: 18: int i=0;
   541                           
   542                           ;incstack = 0
   543  007B90  0E00               	movlw	0
   544  007B92  6E0D               	movwf	writeBits@i+1,c
   545  007B94  0E00               	movlw	0
   546  007B96  6E0C               	movwf	writeBits@i,c
   547                           
   548                           ;ICSP.c: 19: (TRISDbits.TRISD4 = 0);
   549  007B98  9895               	bcf	3989,4,c	;volatile
   550                           
   551                           ;ICSP.c: 20: while(i < bitsToWrite){
   552  007B9A  D015               	goto	l706
   553  007B9C                     l702:
   554                           
   555                           ;ICSP.c: 21: writeBit(((pattern>>i)&0x1));
   556  007B9C  C00C  F009         	movff	writeBits@i,??_writeBits
   557  007BA0  C005  F00A         	movff	writeBits@pattern,??_writeBits+1
   558  007BA4  C006  F00B         	movff	writeBits@pattern+1,??_writeBits+2
   559  007BA8  2A09               	incf	??_writeBits,f,c
   560  007BAA  D003               	goto	u34
   561  007BAC                     u35:
   562  007BAC  90D8               	bcf	status,0,c
   563  007BAE  320B               	rrcf	??_writeBits+2,f,c
   564  007BB0  320A               	rrcf	??_writeBits+1,f,c
   565  007BB2                     u34:
   566  007BB2  2E09               	decfsz	??_writeBits,f,c
   567  007BB4  D7FB               	goto	u35
   568  007BB6  0E01               	movlw	1
   569  007BB8  140A               	andwf	??_writeBits+1,w,c
   570  007BBA  6E03               	movwf	writeBit@bitToWrite,c
   571  007BBC  6A04               	clrf	writeBit@bitToWrite+1,c
   572  007BBE  EC95  F03D         	call	_writeBit	;wreg free
   573                           
   574                           ;ICSP.c: 22: i++;
   575  007BC2  4A0C               	infsnz	writeBits@i,f,c
   576  007BC4  2A0D               	incf	writeBits@i+1,f,c
   577  007BC6                     l706:
   578  007BC6  5007               	movf	writeBits@bitsToWrite,w,c
   579  007BC8  5C0C               	subwf	writeBits@i,w,c
   580  007BCA  5008               	movf	writeBits@bitsToWrite+1,w,c
   581  007BCC  580D               	subwfb	writeBits@i+1,w,c
   582  007BCE  B0D8               	btfsc	status,0,c
   583  007BD0  0012               	return	
   584  007BD2  D7E4               	goto	l702
   585  007BD4                     __end_of_writeBits:
   586                           	opt stack 0
   587                           status	equ	0xFD8
   588                           
   589 ;; *************** function _writeBit *****************
   590 ;; Defined at:
   591 ;;		line 11 in file "../src/PIC18/ICSP.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  bitToWrite      2    2[COMRAM] unsigned int 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;		None               void
   598 ;; Registers used:
   599 ;;		cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   605 ;;      Params:         2       0       0       0       0       0       0
   606 ;;      Locals:         0       0       0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0
   608 ;;      Totals:         2       0       0       0       0       0       0
   609 ;;Total ram usage:        2 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; Hardware stack levels required when called:    1
   612 ;; This function calls:
   613 ;;		_PGC_high
   614 ;;		_PGC_low
   615 ;;		_writePGD
   616 ;; This function is called by:
   617 ;;		_writeBits
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text6
   622  007B2A                     __ptext6:
   623                           	opt stack 0
   624  007B2A                     _writeBit:
   625                           	opt stack 25
   626                           
   627                           ;ICSP.c: 12: PGC_high();
   628                           
   629                           ;incstack = 0
   630  007B2A  EC5B  F03D         	call	_PGC_high	;wreg free
   631                           
   632                           ;ICSP.c: 13: writePGD(bitToWrite);
   633  007B2E  C003  F001         	movff	writeBit@bitToWrite,writePGD@data
   634  007B32  C004  F002         	movff	writeBit@bitToWrite+1,writePGD@data+1
   635  007B36  EC65  F03D         	call	_writePGD	;wreg free
   636                           
   637                           ;ICSP.c: 14: PGC_low();
   638  007B3A  EC59  F03D         	call	_PGC_low	;wreg free
   639  007B3E  0012               	return	
   640  007B40                     __end_of_writeBit:
   641                           	opt stack 0
   642                           status	equ	0xFD8
   643                           
   644 ;; *************** function _readBits *****************
   645 ;; Defined at:
   646 ;;		line 42 in file "../src/PIC18/ICSP.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  bitsToRead      2    7[COMRAM] int 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  data            2   13[COMRAM] unsigned int 
   651 ;;  i               2   11[COMRAM] int 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  2    7[COMRAM] unsigned int 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   661 ;;      Params:         2       0       0       0       0       0       0
   662 ;;      Locals:         4       0       0       0       0       0       0
   663 ;;      Temps:          2       0       0       0       0       0       0
   664 ;;      Totals:         8       0       0       0       0       0       0
   665 ;;Total ram usage:        8 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    2
   668 ;; This function calls:
   669 ;;		_readBit
   670 ;; This function is called by:
   671 ;;		_readICSP
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text7
   676  007C22                     __ptext7:
   677                           	opt stack 0
   678  007C22                     _readBits:
   679                           	opt stack 25
   680                           
   681                           ;ICSP.c: 43: int i=0;
   682                           
   683                           ;incstack = 0
   684  007C22  0E00               	movlw	0
   685  007C24  6E0D               	movwf	readBits@i+1,c
   686  007C26  0E00               	movlw	0
   687  007C28  6E0C               	movwf	readBits@i,c
   688                           
   689                           ;ICSP.c: 44: uint16 data=0;
   690  007C2A  0E00               	movlw	0
   691  007C2C  6E0F               	movwf	readBits@data+1,c
   692  007C2E  0E00               	movlw	0
   693  007C30  6E0E               	movwf	readBits@data,c
   694                           
   695                           ;ICSP.c: 45: (TRISDbits.TRISD4 = 1);
   696  007C32  8895               	bsf	3989,4,c	;volatile
   697                           
   698                           ;ICSP.c: 46: while(i < bitsToRead){
   699  007C34  D011               	goto	l716
   700  007C36                     l712:
   701                           
   702                           ;ICSP.c: 47: data = (data<<1)|readBit();
   703  007C36  ECA0  F03D         	call	_readBit	;wreg free
   704  007C3A  C00E  F00A         	movff	readBits@data,??_readBits
   705  007C3E  C00F  F00B         	movff	readBits@data+1,??_readBits+1
   706  007C42  90D8               	bcf	status,0,c
   707  007C44  360A               	rlcf	??_readBits,f,c
   708  007C46  360B               	rlcf	??_readBits+1,f,c
   709  007C48  5004               	movf	?_readBit,w,c
   710  007C4A  100A               	iorwf	??_readBits,w,c
   711  007C4C  6E0E               	movwf	readBits@data,c
   712  007C4E  5005               	movf	?_readBit+1,w,c
   713  007C50  100B               	iorwf	??_readBits+1,w,c
   714  007C52  6E0F               	movwf	readBits@data+1,c
   715                           
   716                           ;ICSP.c: 48: i++;
   717  007C54  4A0C               	infsnz	readBits@i,f,c
   718  007C56  2A0D               	incf	readBits@i+1,f,c
   719  007C58                     l716:
   720  007C58  500D               	movf	readBits@i+1,w,c
   721  007C5A  0A80               	xorlw	128
   722  007C5C  6E0A               	movwf	??_readBits& (0+255),c
   723  007C5E  5008               	movf	readBits@bitsToRead,w,c
   724  007C60  5C0C               	subwf	readBits@i,w,c
   725  007C62  5009               	movf	readBits@bitsToRead+1,w,c
   726  007C64  0A80               	xorlw	128
   727  007C66  580A               	subwfb	??_readBits& (0+255),w,c
   728  007C68  A0D8               	btfss	status,0,c
   729  007C6A  D7E5               	goto	l712
   730                           
   731                           ;ICSP.c: 49: }
   732                           ;ICSP.c: 51: return data;
   733  007C6C  C00E  F008         	movff	readBits@data,?_readBits
   734  007C70  C00F  F009         	movff	readBits@data+1,?_readBits+1
   735  007C74  0012               	return	
   736  007C76                     __end_of_readBits:
   737                           	opt stack 0
   738                           status	equ	0xFD8
   739                           
   740 ;; *************** function _readBit *****************
   741 ;; Defined at:
   742 ;;		line 34 in file "../src/PIC18/ICSP.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  data            2    5[COMRAM] unsigned int 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  2    3[COMRAM] unsigned int 
   749 ;; Registers used:
   750 ;;		wreg, status,2, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   756 ;;      Params:         2       0       0       0       0       0       0
   757 ;;      Locals:         2       0       0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0
   759 ;;      Totals:         4       0       0       0       0       0       0
   760 ;;Total ram usage:        4 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    1
   763 ;; This function calls:
   764 ;;		_PGC_high
   765 ;;		_PGC_low
   766 ;;		_readPGD
   767 ;; This function is called by:
   768 ;;		_readBits
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text8
   773  007B40                     __ptext8:
   774                           	opt stack 0
   775  007B40                     _readBit:
   776                           	opt stack 25
   777                           
   778                           ;ICSP.c: 35: uint16 data=0;
   779                           
   780                           ;incstack = 0
   781  007B40  0E00               	movlw	0
   782  007B42  6E07               	movwf	readBit@data+1,c
   783  007B44  0E00               	movlw	0
   784  007B46  6E06               	movwf	readBit@data,c
   785                           
   786                           ;ICSP.c: 36: PGC_high();
   787  007B48  EC5B  F03D         	call	_PGC_high	;wreg free
   788                           
   789                           ;ICSP.c: 37: data = readPGD();
   790  007B4C  EC8B  F03D         	call	_readPGD	;wreg free
   791  007B50  C001  F006         	movff	?_readPGD,readBit@data
   792  007B54  C002  F007         	movff	?_readPGD+1,readBit@data+1
   793                           
   794                           ;ICSP.c: 38: PGC_low();
   795  007B58  EC59  F03D         	call	_PGC_low	;wreg free
   796                           
   797                           ;ICSP.c: 39: return data;
   798  007B5C  C006  F004         	movff	readBit@data,?_readBit
   799  007B60  C007  F005         	movff	readBit@data+1,?_readBit+1
   800  007B64  0012               	return	
   801  007B66                     __end_of_readBit:
   802                           	opt stack 0
   803                           status	equ	0xFD8
   804                           
   805 ;; *************** function _readPGD *****************
   806 ;; Defined at:
   807 ;;		line 6 in file "../src/PIC18/FlashProg.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  2    0[COMRAM] unsigned int 
   814 ;; Registers used:
   815 ;;		wreg, status,2
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   821 ;;      Params:         2       0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0
   823 ;;      Temps:          1       0       0       0       0       0       0
   824 ;;      Totals:         3       0       0       0       0       0       0
   825 ;;Total ram usage:        3 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_readBit
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text9
   835  007B16                     __ptext9:
   836                           	opt stack 0
   837  007B16                     _readPGD:
   838                           	opt stack 25
   839                           
   840                           ;FlashProg.c: 7: return PORTDbits.RD4;
   841                           
   842                           ;incstack = 0
   843  007B16  A883               	btfss	3971,4,c	;volatile
   844  007B18  D003               	goto	u10
   845  007B1A  6A03               	clrf	??_readPGD& (0+255),c
   846  007B1C  2A03               	incf	??_readPGD& (0+255),f,c
   847  007B1E  D001               	goto	u18
   848  007B20                     u10:
   849  007B20  6A03               	clrf	??_readPGD& (0+255),c
   850  007B22                     u18:
   851  007B22  5003               	movf	??_readPGD,w,c
   852  007B24  6E01               	movwf	?_readPGD,c
   853  007B26  6A02               	clrf	?_readPGD+1,c
   854  007B28  0012               	return	
   855  007B2A                     __end_of_readPGD:
   856                           	opt stack 0
   857                           status	equ	0xFD8
   858                           
   859 ;; *************** function _PGC_high *****************
   860 ;; Defined at:
   861 ;;		line 22 in file "../src/PIC18/FlashProg.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;		None               void
   868 ;; Registers used:
   869 ;;		None
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   875 ;;      Params:         0       0       0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0
   878 ;;      Totals:         0       0       0       0       0       0       0
   879 ;;Total ram usage:        0 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_writeBit
   885 ;;		_readBit
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text10
   890  007AB6                     __ptext10:
   891                           	opt stack 0
   892  007AB6                     _PGC_high:
   893                           	opt stack 25
   894                           
   895                           ;FlashProg.c: 23: PORTDbits.RD5 = 1;
   896                           
   897                           ;incstack = 0
   898  007AB6  8A83               	bsf	3971,5,c	;volatile
   899  007AB8  0012               	return	
   900  007ABA                     __end_of_PGC_high:
   901                           	opt stack 0
   902                           status	equ	0xFD8
   903                           
   904 ;; *************** function _exit_HVP *****************
   905 ;; Defined at:
   906 ;;		line 53 in file "../src/PIC18/FlashProg.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;		None               void
   913 ;; Registers used:
   914 ;;		wreg, status,2, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   920 ;;      Params:         0       0       0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    2
   927 ;; This function calls:
   928 ;;		_MCLR_low
   929 ;;		_PGC_low
   930 ;;		_PGD_low
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text11
   937  007AE4                     __ptext11:
   938                           	opt stack 0
   939  007AE4                     _exit_HVP:
   940                           	opt stack 27
   941                           
   942                           ;FlashProg.c: 54: PGC_low();
   943                           
   944                           ;incstack = 0
   945  007AE4  EC59  F03D         	call	_PGC_low	;wreg free
   946                           
   947                           ;FlashProg.c: 55: PGD_low();
   948  007AE8  EC6B  F03D         	call	_PGD_low	;wreg free
   949                           
   950                           ;FlashProg.c: 56: MCLR_low();
   951  007AEC  EC57  F03D         	call	_MCLR_low	;wreg free
   952  007AF0  0012               	return	
   953  007AF2                     __end_of_exit_HVP:
   954                           	opt stack 0
   955                           status	equ	0xFD8
   956                           
   957 ;; *************** function _enter_HVP *****************
   958 ;; Defined at:
   959 ;;		line 46 in file "../src/PIC18/FlashProg.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;		None               void
   966 ;; Registers used:
   967 ;;		wreg, status,2, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   973 ;;      Params:         0       0       0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    2
   980 ;; This function calls:
   981 ;;		_MCLR_high
   982 ;;		_MCLR_low
   983 ;;		_PGC_low
   984 ;;		_PGD_low
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text12
   991  007AF2                     __ptext12:
   992                           	opt stack 0
   993  007AF2                     _enter_HVP:
   994                           	opt stack 27
   995                           
   996                           ;FlashProg.c: 47: MCLR_low();
   997                           
   998                           ;incstack = 0
   999  007AF2  EC57  F03D         	call	_MCLR_low	;wreg free
  1000                           
  1001                           ;FlashProg.c: 48: PGC_low();
  1002  007AF6  EC59  F03D         	call	_PGC_low	;wreg free
  1003                           
  1004                           ;FlashProg.c: 49: PGD_low();
  1005  007AFA  EC6B  F03D         	call	_PGD_low	;wreg free
  1006                           
  1007                           ;FlashProg.c: 50: MCLR_high();
  1008  007AFE  EC55  F03D         	call	_MCLR_high	;wreg free
  1009  007B02  0012               	return	
  1010  007B04                     __end_of_enter_HVP:
  1011                           	opt stack 0
  1012                           status	equ	0xFD8
  1013                           
  1014 ;; *************** function _PGD_low *****************
  1015 ;; Defined at:
  1016 ;;		line 18 in file "../src/PIC18/FlashProg.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;		None               void
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1030 ;;      Params:         0       0       0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0
  1033 ;;      Totals:         0       0       0       0       0       0       0
  1034 ;;Total ram usage:        0 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    1
  1037 ;; This function calls:
  1038 ;;		_writePGD
  1039 ;; This function is called by:
  1040 ;;		_enter_HVP
  1041 ;;		_exit_HVP
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text13
  1046  007AD6                     __ptext13:
  1047                           	opt stack 0
  1048  007AD6                     _PGD_low:
  1049                           	opt stack 27
  1050                           
  1051                           ;FlashProg.c: 19: writePGD(0);
  1052                           
  1053                           ;incstack = 0
  1054  007AD6  0E00               	movlw	0
  1055  007AD8  6E02               	movwf	writePGD@data+1,c
  1056  007ADA  0E00               	movlw	0
  1057  007ADC  6E01               	movwf	writePGD@data,c
  1058  007ADE  EC65  F03D         	call	_writePGD	;wreg free
  1059  007AE2  0012               	return	
  1060  007AE4                     __end_of_PGD_low:
  1061                           	opt stack 0
  1062                           status	equ	0xFD8
  1063                           
  1064 ;; *************** function _writePGD *****************
  1065 ;; Defined at:
  1066 ;;		line 10 in file "../src/PIC18/FlashProg.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  data            2    0[COMRAM] int 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;		None               void
  1073 ;; Registers used:
  1074 ;;		None
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1080 ;;      Params:         2       0       0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0
  1083 ;;      Totals:         2       0       0       0       0       0       0
  1084 ;;Total ram usage:        2 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_PGD_low
  1090 ;;		_writeBit
  1091 ;;		_PGD_high
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text14
  1096  007ACA                     __ptext14:
  1097                           	opt stack 0
  1098  007ACA                     _writePGD:
  1099                           	opt stack 25
  1100                           
  1101                           ;FlashProg.c: 11: PORTDbits.RD4 = data;
  1102                           
  1103                           ;incstack = 0
  1104  007ACA  B001               	btfsc	writePGD@data,0,c
  1105  007ACC  D002               	bra	u25
  1106  007ACE  9883               	bcf	3971,4,c	;volatile
  1107  007AD0  D001               	bra	u26
  1108  007AD2                     u25:
  1109  007AD2  8883               	bsf	3971,4,c	;volatile
  1110  007AD4                     u26:
  1111  007AD4  0012               	return	
  1112  007AD6                     __end_of_writePGD:
  1113                           	opt stack 0
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function _PGC_low *****************
  1117 ;; Defined at:
  1118 ;;		line 26 in file "../src/PIC18/FlashProg.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;		None               void
  1125 ;; Registers used:
  1126 ;;		None
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1132 ;;      Params:         0       0       0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0
  1135 ;;      Totals:         0       0       0       0       0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_enter_HVP
  1142 ;;		_exit_HVP
  1143 ;;		_writeBit
  1144 ;;		_readBit
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text15
  1149  007AB2                     __ptext15:
  1150                           	opt stack 0
  1151  007AB2                     _PGC_low:
  1152                           	opt stack 25
  1153                           
  1154                           ;FlashProg.c: 27: PORTDbits.RD5 = 0;
  1155                           
  1156                           ;incstack = 0
  1157  007AB2  9A83               	bcf	3971,5,c	;volatile
  1158  007AB4  0012               	return	
  1159  007AB6                     __end_of_PGC_low:
  1160                           	opt stack 0
  1161                           status	equ	0xFD8
  1162                           
  1163 ;; *************** function _MCLR_low *****************
  1164 ;; Defined at:
  1165 ;;		line 38 in file "../src/PIC18/FlashProg.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;		None               void
  1172 ;; Registers used:
  1173 ;;		None
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1179 ;;      Params:         0       0       0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0
  1182 ;;      Totals:         0       0       0       0       0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_enter_HVP
  1189 ;;		_exit_HVP
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text16
  1194  007AAE                     __ptext16:
  1195                           	opt stack 0
  1196  007AAE                     _MCLR_low:
  1197                           	opt stack 28
  1198                           
  1199                           ;FlashProg.c: 39: PORTDbits.RD7 = 0;
  1200                           
  1201                           ;incstack = 0
  1202  007AAE  9E83               	bcf	3971,7,c	;volatile
  1203  007AB0  0012               	return	
  1204  007AB2                     __end_of_MCLR_low:
  1205                           	opt stack 0
  1206                           status	equ	0xFD8
  1207                           
  1208 ;; *************** function _MCLR_high *****************
  1209 ;; Defined at:
  1210 ;;		line 42 in file "../src/PIC18/FlashProg.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;		None               void
  1217 ;; Registers used:
  1218 ;;		None
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1224 ;;      Params:         0       0       0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0       0       0
  1227 ;;      Totals:         0       0       0       0       0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_enter_HVP
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text17
  1238  007AAA                     __ptext17:
  1239                           	opt stack 0
  1240  007AAA                     _MCLR_high:
  1241                           	opt stack 28
  1242                           
  1243                           ;FlashProg.c: 43: PORTDbits.RD7 = 1;
  1244                           
  1245                           ;incstack = 0
  1246  007AAA  8E83               	bsf	3971,7,c	;volatile
  1247  007AAC  0012               	return	
  1248  007AAE                     __end_of_MCLR_high:
  1249                           	opt stack 0
  1250  0000                     status	equ	0xFD8
  1251                           status	equ	0xFD8
  1252                           
  1253                           	psect	rparam
  1254  0000                     status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      21
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_readDeviceID1
    _readDeviceID1->_readICSP
    _writeICSP->_writeBits
    _readICSP->_readBits
    _writeBits->_writeBit
    _writeBit->_writePGD
    _readBits->_readBit
    _readBit->_readPGD
    _PGD_low->_writePGD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3288
                          _enter_HVP
                           _exit_HVP
                      _readDeviceID1
                           _trisInit
 ---------------------------------------------------------------------------------
 (1) _trisInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readDeviceID1                                        2     2      0    3054
                                             19 COMRAM     2     2      0
                           _readICSP
                          _writeICSP
 ---------------------------------------------------------------------------------
 (2) _writeICSP                                            4     0      4    2432
                                             13 COMRAM     4     0      4
                          _writeBits
 ---------------------------------------------------------------------------------
 (2) _readICSP                                             4     2      2     622
                                             15 COMRAM     4     2      2
                           _readBits
                          _writeBits
 ---------------------------------------------------------------------------------
 (3) _writeBits                                            9     5      4     498
                                              4 COMRAM     9     5      4
                           _writeBit
 ---------------------------------------------------------------------------------
 (4) _writeBit                                             2     0      2     166
                                              2 COMRAM     2     0      2
                           _PGC_high
                            _PGC_low
                           _writePGD
 ---------------------------------------------------------------------------------
 (3) _readBits                                             8     6      2     109
                                              7 COMRAM     8     6      2
                            _readBit
 ---------------------------------------------------------------------------------
 (4) _readBit                                              4     2      2      15
                                              3 COMRAM     4     2      2
                           _PGC_high
                            _PGC_low
                            _readPGD
 ---------------------------------------------------------------------------------
 (5) _readPGD                                              3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _PGC_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _exit_HVP                                             0     0      0     117
                           _MCLR_low
                            _PGC_low
                            _PGD_low
 ---------------------------------------------------------------------------------
 (1) _enter_HVP                                            0     0      0     117
                          _MCLR_high
                           _MCLR_low
                            _PGC_low
                            _PGD_low
 ---------------------------------------------------------------------------------
 (2) _PGD_low                                              0     0      0     117
                           _writePGD
 ---------------------------------------------------------------------------------
 (5) _writePGD                                             2     0      2     117
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _PGC_low                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MCLR_low                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MCLR_high                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enter_HVP
     _MCLR_high
     _MCLR_low
     _PGC_low
     _PGD_low
       _writePGD
   _exit_HVP
     _MCLR_low
     _PGC_low
     _PGD_low
       _writePGD
   _readDeviceID1
     _readICSP
       _readBits
         _readBit
           _PGC_high
           _PGC_low
           _readPGD
       _writeBits
         _writeBit
           _PGC_high
           _PGC_low
           _writePGD
     _writeICSP
       _writeBits
         _writeBit
           _PGC_high
           _PGC_low
           _writePGD
   _trisInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     15      15       1       16.5%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BANK5               EF      0       0      13        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            EF      0       0      15        0.0%
BIGRAM             5EE      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Nov 07 18:31:42 2014

                     l97 7B14                       u10 7B20                       u25 7AD2  
                     u26 7AD4                       u18 7B22                       u34 7BB2  
                     u35 7BAC                      l702 7B9C                      l712 7C36  
                    l706 7BC6                      l716 7C58             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000            __CFG_DEBUG$ON 000000          __end_of_PGC_low 7AB6  
           __CFG_PWRT$ON 000000          __end_of_PGD_low 7AE4                     _main 7B04  
                   start 0002       __size_of_MCLR_high 0004         __end_of_MCLR_low 7AB2  
                  ?_main 0001         __end_of_PGC_high 7ABA          __end_of_readPGD 7B2A  
        __end_of_readBit 7B66                    status 000FD8   __size_of_readDeviceID1 008A  
        __initialization 7ABA             __end_of_main 7B16                   ??_main 0016  
          __activetblptr 000000                ??_PGC_low 0001                ??_PGD_low 0003  
      __end_of_MCLR_high 7AAE              readBit@data 0006         __end_of_readICSP 7C22  
       __end_of_readBits 7C76         __end_of_exit_HVP 7AF2            _readDeviceID1 7C76  
              ??_readPGD 0003                ??_readBit 0006         __end_of_trisInit 7ACA  
       __end_of_writePGD 7AD6         __end_of_writeBit 7B40               __accesstop 0080  
__end_of__initialization 7ABA             readICSP@data 0012                ?_MCLR_low 0001  
              ?_PGC_high 0001           __pcstackCOMRAM 0001           ?_readDeviceID1 0001  
     __size_of_enter_HVP 0012               ??_MCLR_low 0001               ??_PGC_high 0001  
           readBits@data 000E                  _PGC_low 7AB2                  _PGD_low 7AD6  
              ?_readICSP 0010                ?_readBits 0008                ?_exit_HVP 0001  
     __size_of_writeICSP 002A       __size_of_writeBits 0044                  __Hparam 0000  
                __Lparam 0000       writeBit@bitToWrite 0003                ?_trisInit 0001  
        ??_readDeviceID1 0014        __end_of_enter_HVP 7B04                  __pcinit 7ABA  
                __ramtop 0600                ?_writePGD 0001                ?_writeBit 0003  
                __ptext0 7B04                  __ptext1 7AC0                  __ptext2 7C76  
                __ptext3 7B66                  __ptext4 7BD4                  __ptext5 7B90  
                __ptext6 7B2A                  __ptext7 7C22                  __ptext8 7B40  
                __ptext9 7B16                  _readPGD 7B16                  _readBit 7B40  
           writePGD@data 0001     end_of_initialization 7ABA               ??_readICSP 0012  
              _MCLR_high 7AAA               ??_readBits 000A               ??_exit_HVP 0003  
             ??_trisInit 0001               ??_writePGD 0003               ??_writeBit 0005  
              _PORTDbits 000F83        __end_of_writeICSP 7B90        __end_of_writeBits 7BD4  
              _TRISDbits 000F95         writeBits@pattern 0005               ?_MCLR_high 0001  
      __size_of_MCLR_low 0004        __size_of_PGC_high 0004     writeICSP@commandByte 000E  
    start_initialization 7ABA         __CFG_OSC$INTIO67 000000       writeICSP@dataBytes 0010  
               ?_PGC_low 0001                 ?_PGD_low 0001              ??_MCLR_high 0001  
      __size_of_readICSP 004E        __size_of_readBits 0054        __size_of_exit_HVP 000E  
      __size_of_trisInit 000A                 ?_readPGD 0001                 ?_readBit 0004  
              _enter_HVP 7AF2        __size_of_writePGD 000C        __size_of_writeBit 0016  
               _MCLR_low 7AAE                 _PGC_high 7AB6    __end_of_readDeviceID1 7D00  
             ?_enter_HVP 0001                _writeICSP 7B66                _writeBits 7B90  
       __size_of_PGC_low 0004         __size_of_PGD_low 000E       readBits@bitsToRead 0008  
              readBits@i 000C                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_readPGD 0014         __size_of_readBit 0026               ?_writeICSP 000E  
               __ptext10 7AB6                 __ptext11 7AE4                 __ptext12 7AF2  
               __ptext13 7AD6                 __ptext14 7ACA                 __ptext15 7AB2  
               __ptext16 7AAE                 __ptext17 7AAA               ?_writeBits 0005  
               _readICSP 7BD4                 _readBits 7C22                 _exit_HVP 7AE4  
          __size_of_main 0012     writeBits@bitsToWrite 0007               writeBits@i 000C  
     readDeviceID1@value 0014                 _trisInit 7AC0                 _writePGD 7ACA  
               _writeBit 7B2A              ??_enter_HVP 0003              ??_writeICSP 0012  
            ??_writeBits 0009  
